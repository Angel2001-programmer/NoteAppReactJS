{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Angel\\\\OneDrive\\\\Documents\\\\React JS\\\\React-Investments\\\\src\\\\App.js\";\nimport ResultTable from './componenets/resultTable';\nimport FormCalculator from './componenets/FormCalculator';\nimport logo from './assets/investment-calculator-logo.png';\nimport Header from './componenets/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  var _s = $RefreshSig$();\n  const calculateHandler = userInput => {\n    _s();\n    const [yearlyData, setYearlyData] = useState([]); // per-year results\n    const [isShown, setisShown] = useState([]);\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    let currentSavings = +userInput['current-savings']; // feel free to change the shape of this input object!\n    const yearlyContribution = +userInput['yearly-contribution']; // as mentioned: feel free to change the shape...\n    const expectedReturn = +userInput['expected-return'] / 100;\n    const duration = +userInput['duration'];\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      setYearlyData;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution\n      });\n    }\n\n    // do something with yearlyData ...\n    const ResultTableHandler = () => {\n      if (isShown != false) {\n        /*#__PURE__*/_jsxDEV(ResultTable, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 5\n        }, this);\n      } else {\n        /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 5\n        }, this);\n      }\n    };\n  };\n  _s(calculateHandler, \"/CQlV7jJiYWUCbLrLFrZsJv6MAY=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      logo: logo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormCalculator, {\n      isShown: isShown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), ResultTableHandler]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ResultTable","FormCalculator","logo","Header","jsxDEV","_jsxDEV","App","_s","$RefreshSig$","calculateHandler","userInput","yearlyData","setYearlyData","useState","isShown","setisShown","currentSavings","yearlyContribution","expectedReturn","duration","i","yearlyInterest","push","year","savingsEndOfYear","ResultTableHandler","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["C:/Users/Angel/OneDrive/Documents/React JS/React-Investments/src/App.js"],"sourcesContent":["import ResultTable from './componenets/resultTable';\nimport FormCalculator from './componenets/FormCalculator';\nimport logo from './assets/investment-calculator-logo.png';\nimport Header from './componenets/Header';\n\nfunction App() {\n  const calculateHandler = (userInput) => {\n    const [yearlyData, setYearlyData] = useState([]); // per-year results\n    const [isShown, setisShown] = useState([]); \n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    let currentSavings = +userInput['current-savings']; // feel free to change the shape of this input object!\n    const yearlyContribution = +userInput['yearly-contribution']; // as mentioned: feel free to change the shape...\n    const expectedReturn = +userInput['expected-return'] / 100;\n    const duration = +userInput['duration'];\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      setYearlyData\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n      });\n    }\n\n    // do something with yearlyData ...\nconst ResultTableHandler = () => {\n  if(isShown != false){\n    <ResultTable/>\n  } else {\n    <div></div>\n  }\n}\n  };\n\n  return (\n    <div>\n      <Header logo={logo}/>\n      <FormCalculator isShown={isShown}/>\n      {/* Todo: Show below table conditionally (only once result data is available) */}\n      {/* Show fallback text if no data is available */}\n      {ResultTableHandler}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,WAAW,MAAM,2BAA2B;AACnD,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,IAAI,MAAM,yCAAyC;AAC1D,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,GAAGA,CAAA,EAAG;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACb,MAAMC,gBAAgB,GAAIC,SAAS,IAAK;IAAAH,EAAA;IACtC,MAAM,CAACI,UAAU,EAAEC,aAAa,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAClD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;IAC1C;IACA;;IAEA,IAAIG,cAAc,GAAG,CAACN,SAAS,CAAC,iBAAiB,CAAC,CAAC,CAAC;IACpD,MAAMO,kBAAkB,GAAG,CAACP,SAAS,CAAC,qBAAqB,CAAC,CAAC,CAAC;IAC9D,MAAMQ,cAAc,GAAG,CAACR,SAAS,CAAC,iBAAiB,CAAC,GAAG,GAAG;IAC1D,MAAMS,QAAQ,GAAG,CAACT,SAAS,CAAC,UAAU,CAAC;;IAEvC;IACA,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,EAAEC,CAAC,EAAE,EAAE;MACjC,MAAMC,cAAc,GAAGL,cAAc,GAAGE,cAAc;MACtDF,cAAc,IAAIK,cAAc,GAAGJ,kBAAkB;MACrDL,aAAa;MACbD,UAAU,CAACW,IAAI,CAAC;QACd;QACAC,IAAI,EAAEH,CAAC,GAAG,CAAC;QACXC,cAAc,EAAEA,cAAc;QAC9BG,gBAAgB,EAAER,cAAc;QAChCC,kBAAkB,EAAEA;MACtB,CAAC,CAAC;IACJ;;IAEA;IACJ,MAAMQ,kBAAkB,GAAGA,CAAA,KAAM;MAC/B,IAAGX,OAAO,IAAI,KAAK,EAAC;QAClB,aAAAT,OAAA,CAACL,WAAW;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAChB,CAAC,MAAM;QACL,aAAAxB,OAAA;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC;MACb;IACF,CAAC;EACC,CAAC;EAACtB,EAAA,CAjCIE,gBAAgB;EAmCtB,oBACEJ,OAAA;IAAAyB,QAAA,gBACEzB,OAAA,CAACF,MAAM;MAACD,IAAI,EAAEA;IAAK;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACrBxB,OAAA,CAACJ,cAAc;MAACa,OAAO,EAAEA;IAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAGlCJ,kBAAkB;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEV;AAACE,EAAA,GA7CQzB,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}