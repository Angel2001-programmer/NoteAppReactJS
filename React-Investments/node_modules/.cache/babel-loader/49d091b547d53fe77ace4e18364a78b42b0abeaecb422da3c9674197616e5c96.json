{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Angel\\\\OneDrive\\\\Documents\\\\React JS\\\\React-Investments\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport ResultsTable from './componenets/ResultsTable/ResultsTable';\nimport UserInput from './componenets/UserInput/UserInput';\nimport logo from './assets/investment-calculator-logo.png';\nimport Header from './componenets/Headers/Header';\nimport ItemTable from './componenets/ItemTable';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState(null);\n  const [IsValid, setIsValid] = useState(true);\n  let ResultEvent = null;\n  let itemEvent = null;\n  if (IsValid) {\n    ResultEvent = /*#__PURE__*/_jsxDEV(ResultsTable, {\n      data: data,\n      initialInvestment: data[currentsavings]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 19\n    }, this);\n    itemEvent = /*#__PURE__*/_jsxDEV(ItemTable, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this);\n  } else {\n    ResultEvent = /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"errorTitle\",\n      children: \"No results recorded.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 19\n    }, this);\n    itemEvent = null;\n  }\n  const calculateHandler = (currentsavings, yearlysavings, expectedinterest, investmentduration) => {\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    let yearlyData = []; // per-year results\n\n    let currentSavings = currentsavings; // feel free to change the shape of this input object!\n    const yearlyContribution = yearlysavings; // as mentioned: feel free to change the shape...\n    const expectedReturn = expectedinterest / 100;\n    const duration = investmentduration;\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution\n      });\n    }\n    // do something with yearlyData ...\n    setData(yearlyData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      logo: logo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserInput, {\n      calculateHandler: calculateHandler,\n      IsValid: IsValid,\n      onChangeValid: setIsValid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), ResultEvent, itemEvent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"m8H3X/2FhO+evmFpaS4Vv1GZQLg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ResultsTable","UserInput","logo","Header","ItemTable","useState","jsxDEV","_jsxDEV","App","_s","data","setData","IsValid","setIsValid","ResultEvent","itemEvent","initialInvestment","currentsavings","fileName","_jsxFileName","lineNumber","columnNumber","className","children","calculateHandler","yearlysavings","expectedinterest","investmentduration","yearlyData","currentSavings","yearlyContribution","expectedReturn","duration","i","yearlyInterest","push","year","savingsEndOfYear","onChangeValid","_c","$RefreshReg$"],"sources":["C:/Users/Angel/OneDrive/Documents/React JS/React-Investments/src/App.js"],"sourcesContent":["import ResultsTable from './componenets/ResultsTable/ResultsTable';\nimport UserInput from './componenets/UserInput/UserInput';\nimport logo from './assets/investment-calculator-logo.png';\nimport Header from './componenets/Headers/Header';\nimport ItemTable from './componenets/ItemTable';\nimport { useState } from 'react';\n\nfunction App() {\n  const [data, setData] = useState(null); \n  const [IsValid, setIsValid] = useState(true); \n\n  let ResultEvent = null;\n  let itemEvent = null;\n\n  if(IsValid){\n    ResultEvent = <ResultsTable data={data} initialInvestment={data[currentsavings]}/>\n    itemEvent = <ItemTable/>\n  } else {\n    ResultEvent = <h1 className='errorTitle'>No results recorded.</h1>\n    itemEvent = null;\n  }\n\n  const calculateHandler = (currentsavings, yearlysavings, expectedinterest, investmentduration) => {\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    let yearlyData = []; // per-year results\n\n    let currentSavings = currentsavings; // feel free to change the shape of this input object!\n    const yearlyContribution = yearlysavings; // as mentioned: feel free to change the shape...\n    const expectedReturn = expectedinterest / 100;\n    const duration = investmentduration;\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n      });\n    }\n    // do something with yearlyData ...\n      setData(yearlyData);\n  };\n\n\n  return (\n    <div>\n      <Header logo={logo}/>\n      <UserInput calculateHandler={calculateHandler} IsValid={IsValid} onChangeValid={setIsValid}/>\n      {/* Todo: Show below table conditionally (only once result data is available) */}\n      {/* Show fallback text if no data is available */}\n      {ResultEvent}\n      {itemEvent}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,YAAY,MAAM,yCAAyC;AAClE,OAAOC,SAAS,MAAM,mCAAmC;AACzD,OAAOC,IAAI,MAAM,yCAAyC;AAC1D,OAAOC,MAAM,MAAM,8BAA8B;AACjD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE5C,IAAIS,WAAW,GAAG,IAAI;EACtB,IAAIC,SAAS,GAAG,IAAI;EAEpB,IAAGH,OAAO,EAAC;IACTE,WAAW,gBAAGP,OAAA,CAACP,YAAY;MAACU,IAAI,EAAEA,IAAK;MAACM,iBAAiB,EAAEN,IAAI,CAACO,cAAc;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;IAClFN,SAAS,gBAAGR,OAAA,CAACH,SAAS;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAC1B,CAAC,MAAM;IACLP,WAAW,gBAAGP,OAAA;MAAIe,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAC;IAAoB;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;IAClEN,SAAS,GAAG,IAAI;EAClB;EAEA,MAAMS,gBAAgB,GAAGA,CAACP,cAAc,EAAEQ,aAAa,EAAEC,gBAAgB,EAAEC,kBAAkB,KAAK;IAChG;IACA;;IAEA,IAAIC,UAAU,GAAG,EAAE,CAAC,CAAC;;IAErB,IAAIC,cAAc,GAAGZ,cAAc,CAAC,CAAC;IACrC,MAAMa,kBAAkB,GAAGL,aAAa,CAAC,CAAC;IAC1C,MAAMM,cAAc,GAAGL,gBAAgB,GAAG,GAAG;IAC7C,MAAMM,QAAQ,GAAGL,kBAAkB;;IAEnC;IACA,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,EAAEC,CAAC,EAAE,EAAE;MACjC,MAAMC,cAAc,GAAGL,cAAc,GAAGE,cAAc;MACtDF,cAAc,IAAIK,cAAc,GAAGJ,kBAAkB;MACrDF,UAAU,CAACO,IAAI,CAAC;QACd;QACAC,IAAI,EAAEH,CAAC,GAAG,CAAC;QACXC,cAAc,EAAEA,cAAc;QAC9BG,gBAAgB,EAAER,cAAc;QAChCC,kBAAkB,EAAEA;MACtB,CAAC,CAAC;IACJ;IACA;IACEnB,OAAO,CAACiB,UAAU,CAAC;EACvB,CAAC;EAGD,oBACErB,OAAA;IAAAgB,QAAA,gBACEhB,OAAA,CAACJ,MAAM;MAACD,IAAI,EAAEA;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACrBd,OAAA,CAACN,SAAS;MAACuB,gBAAgB,EAAEA,gBAAiB;MAACZ,OAAO,EAAEA,OAAQ;MAAC0B,aAAa,EAAEzB;IAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAG5FP,WAAW,EACXC,SAAS;EAAA;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAACZ,EAAA,CArDQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAuDZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}